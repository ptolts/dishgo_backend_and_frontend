<script type='text/javascript'>//<![CDATA[ 


    var user_data = <%= raw(current_user.to_json) %>;
    var languages = <%= raw(@languages) %>;
    var default_language = <%= raw(@default_language) %>;
    var lang = ko.observable(default_language);
    var languages = ko.observableArray(languages);

    var winner_winner_chicken_dinner = ko.observable();

    function viewModel() {
        var self = this;
        self.selected_prize = ko.observable();
        self.your_prize = ko.observable();
        self.help = ko.observable();
        self.user = ko.observable(new User(user_data));
        self.lang = lang;

        self.prizes = ko.observableArray([]);

        self.your_prizes = ko.computed({
            read: function(){
                return _.filter(self.prizes(),function(prize){
                    if(prize.individual_prizes().length > 0){
                        return true;
                    } else {
                        return false;
                    }
                });
            },
        });

        self.any_your_prizes = ko.computed({
            read: function(){
                if(self.your_prizes().length > 0){
                    return true;
                }
                return false;
            }
        });

        self.fetch_prizes = function(){
            $.ajax({
                type: "POST",
                url: "/app/prizes/won_prize_list",
                data: {

                },
                success: function(data, textStatus, jqXHR){
                    self.prizes(_.map(data,function(prize){ return new Prize(prize) }));
                },
                error: function(data){

                },
                dataType: "json"
            });            
        }

        self.fetch_user = function(){
            $.ajax({
                type: "POST",
                url: "/app/network/fetch_user",
                data: {

                },
                success: function(data, textStatus, jqXHR){
                    self.user(new User(data));
                },
                error: function(data){

                },
                dataType: "json"
            });  
        }               

        self.update_prizes = ko.computed({
            read: function(){
                if(self.selected_prize() == null){
                    self.fetch_prizes();
                }
            }
        });

        self.page = ko.observable("list");
        self.show_your_prizes = function(){
            self.your_prize(true);           
            self.selected_prize(null);
            self.page("your_prizes");
        }
        self.show_home = function(){
            self.your_prize(null);
            self.selected_prize(null);
            self.page("list");
        }
        self.show_help = function(){
            self.your_prize(null);
            self.selected_prize(null);
            self.page("help");            
        }
        self.show_collect = function(){
            self.your_prize(null);
            self.selected_prize(null);
            self.page("collect");            
        }
        self.show_bid = function(){
            self.your_prize(null);
            self.selected_prize(null);
            self.page("bid");            
        }
        self.show_odds = function(){
            self.your_prize(null);
            self.selected_prize(null);
            self.page("odds");            
        }
        self.show_redeem = function(){
            self.your_prize(null);
            self.selected_prize(null);
            self.page("redeem");            
        }          
        self.bid = function(prize){
            prize.bid();
            self.user().dishcoins(self.user().dishcoins() - prize.number_of_bets());
        }

        self.monitor_winner = ko.computed({
            read: function(){
                if(winner_winner_chicken_dinner()){
                    self.show_your_prizes();
                    self.fetch_user();
                    return;                
                }
                if(winner_winner_chicken_dinner() == false){
                    self.show_home();
                    self.fetch_user();
                    return;
                }
            }
        })
    };

    var viewmodel = new viewModel();            

    $(function(){   
        ko.applyBindings(viewmodel);                        
    });

//]]>  
</script> 