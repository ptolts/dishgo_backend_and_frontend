<%= javascript_include_tag "codemirror" %> 
<%= stylesheet_link_tag    "codemirror" %>

<div class="container">

    <p class="col-xs-12">
        <select class="form-control" data-bind="
                            options: fonts, 
                            optionsText: 'name',
                            value: selectedFont,

                            "></select>  
    </p>

    <p class="col-xs-12">
        <button class="btn btn-primary" data-bind="click: createFont">Create Font</button>
    </p>    

    <!-- ko with: selectedFont -->
      <div data-bind="template: { name: 'create_font_template', data: $root.selectedFont}"></div>
    <!-- /ko -->

    <%= render 'shared/font_template' %>
    <%= render 'shared/font_javascript' %>

    <script type='text/javascript'>//<![CDATA[   

        var font_data = <%= raw(@fonts.to_json) %>;

        ko.bindingHandlers.codemirror = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel) {
                var options = ko.toJS(valueAccessor());
                options.value = options.value || '';
                var editor = CodeMirror.fromTextArea(element, options);
                editor.on('change', function (cm) {
                    var value = ko.unwrap(valueAccessor()).value;
                    if (ko.isObservable(value)) {
                        value(cm.getValue());
                    } else {
                        ko.unwrap(valueAccessor()).value = cm.getValue();
                    }
                });
                editor.setValue(allBindingsAccessor().value());
                editor.refresh();
                var wrapperElement = $(editor.getWrapperElement()); 

                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    wrapperElement.remove();
                });
            }
        };        

        function viewModel() {
            var self = this;
            self.fonts = ko.observableArray([]);
            self.selectedFont = ko.observable();            
            self.fonts($.map(font_data, function(item) { return new Font(item) }));    

            self.createNewFontButton = ko.computed(function(){
                if(self.selectedFont() && self.selectedFont().id() == "") {
                    return "Create";
                } else {
                    return "Save";
                }
            });  

            self.fontFormTitle = ko.computed(function(){
                if(self.selectedFont() && self.selectedFont().id() == "") {
                    return "Create a New Design:";
                } else {
                    return "Edit Design:";
                }
            });                

            self.createFont = function(){
                $.ajax({
                  type: "POST",
                  url: "/app/design/create_font",
                  data: {
                    test:'hi',
                  },
                  success: function(data, textStatus, jqXHR){
                        var des = new Font(data);
                        self.fonts.push(des);
                        self.selectedFont(des);
                        console.log(des);
                        console.log("HI");
                    },
                  dataType: "json"
                });
            }

            self.updateFont = function(item){
                $.ajax({
                  type: "POST",
                  url: "/app/design/update_font",
                  data: {
                    // name: item.name(),
                    // css: item.css(),
                    // menu_css: item.menu_css(),
                    // id: item.id(),
                    data: ko.toJSON(item)
                  },
                  success: function(data, textStatus, jqXHR){
                        bootbox.alert("Success");
                    },
                  dataType: "json"
                });
            }            

            self.destroyFont = function(item) {
                bootbox.dialog({
                  message: "Destroy font \"" + item.name() + "\"?",
                  title: "Remove Font",
                  buttons: {
                    success: {
                      label: "No",
                      className: "btn-primary pull-left col-xs-3",
                      callback: function() {

                      }
                    },
                    danger: {
                      label: "Yes",
                      className: "btn-danger col-xs-3 pull-right",
                      callback: function() {
                        $.ajax({
                          type: "POST",
                          url: "/app/design/destroy_font",
                          data: {
                            id: item.id,
                          },
                          success: function(data, textStatus, jqXHR){
                                self.fonts.remove(item);
                            },
                          dataType: "json"
                        });                        
                      }
                    },
                  }
                });        
            } 


        };

        $(function(){ 
          var viewmodel = new viewModel();
          ko.applyBindings(viewmodel);
        });

    //]]>  
    </script>
</div>