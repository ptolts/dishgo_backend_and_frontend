<div class="container">
<div class="profile_controls">

    <div class="col-md-3">
        <ul class="nav nav-pills" data-bind="foreach: $__page__.children">
            <!-- ko if: $data.val('title').match(/notific/gi) -->
                <li data-bind="css: {active: isVisible}"><a data-bind="page-href: $data"><!-- ko text: $data.val('title') --><!-- /ko --><span class="badge badge_note pull-right" data-bind="text: $root.user().notifications().length"></span></a></li>
            <!-- /ko -->
            <!-- ko if: !$data.val('title').match(/notific/gi)  -->
                <li data-bind="css: {active: isVisible}"><a data-bind="text: $data.val('title'), page-href: $data"></a></li>
            <!-- /ko -->            
        </ul>
    </div>

    <div data-bind="page: {id: 'start', title: 'Restaurant Profile', with: restaurant}">
        <div data-bind="template: { name: 'restaurant_template', data: $parent.restaurant }" class="profile_details"></div>
    </div>

    <div data-bind="page: {id: 'localized', title: 'Localized Name', with: restaurant}">
        <div data-bind="template: { name: 'restaurant_localized_template', data: $parent.restaurant }" class="profile_details"></div>
    </div>    
   
    <div data-bind="page: {id: 'user', title: 'User Profile', with: user}">
        <div data-bind="template: { name: 'user_template', data: $parent.user }" class="profile_details"></div>
    </div>

    <div data-bind="page: {id: 'profile_images', title: 'Profile Images', with: restaurant}">
        <div data-bind="template: { name: 'profile_images_template', data: $parent.restaurant }" class="profile_details"></div>
    </div>     

    <div data-bind="page: {id: 'social_media', title: 'Social Media Links', with: restaurant}">
        <div data-bind="template: { name: 'socialmedia_template', data: $parent.restaurant }" class="profile_details"></div>
    </div>

    <div data-bind="page: {id: 'hours', title: 'Restaurant Hours', with: restaurant}">
        <div data-bind="template: { name: 'hours_template', data: $parent.restaurant }" class="profile_details"></div>
    </div>

    <div data-bind="page: {id: 'menu', title: 'Menu Images', with: restaurant}">
        <div data-bind="template: { name: 'menu_images_template', data: $parent.restaurant }" class="profile_details"></div>
    </div>    

    <div data-bind="page: {id: 'notifications', title: 'Notifications', with: user, afterShow: user().mark_as_read}">
        <div data-bind="template: { name: 'notifications_template', data: $parent.user}" class="profile_details"></div>
    </div>    

    <%= render 'shared/restaurant_template' %>
    <%= render 'shared/restaurant_localized_template' %>
    <%= render 'shared/socialmedia_template' %>
    <%= render 'shared/profileimages_template' %>
    <%= render 'shared/notifications_template' %>
    <%= render 'shared/user_template' %>
    <%= render 'shared/hours_template' %>
    <%= render 'shared/menu_images_template' %>

    <script type='text/javascript'>//<![CDATA[ 

        var resto_data = <%= raw(current_user.owns_restaurants.as_json(include: [:user, :menu_images, :image]).to_json) %>;
        var user_data = <%= raw(current_user.as_json(include: :owns_restaurants, include: :notifications).to_json) %>;

        ko.bindingHandlers.phone = {
            init: function (element, valueAccessor, allBindingsAccessor) {
            //console.log("DEBUG: lValue firing on: " + element);
            var underlyingObservable = valueAccessor();
            var interceptor = ko.computed({
                read: function () {
                    return underlyingObservable();
                },
                write: function (newvalue) {
                    var current = underlyingObservable();
                    current = newvalue.replace(/[^0-9\-\(\)]/g,'');
                    underlyingObservable(current);
                    underlyingObservable.notifySubscribers();
                },
            }).extend({ notify: 'always' });
            ko.applyBindingsToNode(element, { value: interceptor, valueUpdate: 'afterkeydown'});
          }
        }; 

        function User(data) {
            var self = this;
            self.id = data._id;
            self.email = ko.observable(data.email);
            self.phone = ko.observable(data.phone);
            self.notifications = ko.observableArray([]);
            _.each(notification_data,function(note){ self.notifications.push(new Notification(note)) });

            self.save = function(){
                $.ajax({
                  type: "POST",
                  url: "/app/administration/update_current_user",
                  data: {
                    params:ko.toJSON(self),
                  },
                  success: function(data, textStatus, jqXHR){
                        console.log("Saved!")      
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) { 
                        console.log("There was an error saving the section " + errorThrown);
                    },
                    dataType: "json"
                });                
            }

            self.mark_as_read = function(){
                if(_.find(self.notifications(),function(e){ return !e.read() })){
                    _.each(self.notifications(),function(e){ e.read(true) })
                    if(helpmodel){
                        _.each(helpmodel.notifications(),function(e){ e.read(true) })
                    }
                    $.ajax({
                      type: "POST",
                      url: "/app/profile/smoke_notifications",
                      data: {
                        params:ko.toJSON(self),
                      },
                      success: function(data, textStatus, jqXHR){
                            console.log("notification destroyed")      
                        },
                        error: function(XMLHttpRequest, textStatus, errorThrown) { 
                            console.log("There was an error saving the section " + errorThrown);
                        },
                        dataType: "json"
                    }); 
                }               
            }              

        }           

        function viewModel() {
            var self = this;
            self.restaurant = ko.observable();
            if(resto_data){
                self.restaurant(new Restaurant(resto_data));
            }
            self.user = ko.observable(new User(user_data))

            // self.times = [];
            // var time = ko.observable(new Date('1/1/2010 00:00:00'));
          
            // while(time().getHours() != 23){
            //    time = ko.observable(new Date(time().getTime() + (30 * 60 * 1000)));
            //    if
            //    self.times.push(time);
            // }


        };

        var image_upload_url = "/app/administration/upload_image";
        var restaurant_id = "<%= current_user.owns_restaurants.id %>";
        var viewmodel = new viewModel();            

        $(function(){   
            pager.Href.hash = '#!/';
            pager.extendWithPage(viewmodel);
            ko.applyBindings(viewmodel);                    
            pager.start();        
        });

    //]]>  
    </script>    

</div>
</div>