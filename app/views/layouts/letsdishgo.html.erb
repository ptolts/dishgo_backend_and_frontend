<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="description" content="Find the best dishes in town! Browse beautiful menus from the hottest local restaurants. Download DishGo today and get access to discounts &amp deals.">
		<title>Search Menus From The Best Local Restaurants in Town | Download DishGo!</title>
		<%= javascript_include_tag "application" %>	
	    <%= javascript_include_tag "menu_editor" %>	
		<%= stylesheet_link_tag    "application", :media => "all" %>
		<%= stylesheet_link_tag    "letsdishgo" %>		
	    <%= csrf_meta_tags %>
		<script>
		  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

		  ga('create', 'UA-48865823-1', 'dishgo.io');
		  ga('send', 'pageview');

		</script>
	</head>
	<body>
		<div class="section-signup">
			<div class="container_small">
				<%= yield %>
			</div>
		</div>
	    <script type='text/javascript'>//<![CDATA[ 

	        var user = <%= current_user ? raw(current_user.to_json) : {} %>;
			var restaurant = <%= raw(@restaurant) %>;	        
	        var restaurant_id;
	        var image_upload_url = "/app/administration/upload_image";        

	        function mapObject(data){
	            var self = this;
	            self.lat = ko.observable(data.lat ? parseFloat(data.lat) : 45.458972);
	            self.lon = ko.observable(data.lon ? parseFloat(data.lon) : -74.155815);
	            self.marker = null;
	            self.map = ko.observable();
	            self.location = new google.maps.LatLng(parseFloat(self.lat()),parseFloat(self.lon()));
	            self.legit_data = false;

	            self.clickEvent = function(event){
	                if(event.latLng){
	                    self.location = new google.maps.LatLng(parseFloat(event.latLng.lat()),parseFloat(event.latLng.lng()));
	                    if(!self.marker){
	                        self.marker = new google.maps.Marker({
	                            position: self.location, 
	                            map: self.map()
	                        });
	                    } else {
	                        self.marker.setPosition(self.location);  
	                    }
	                    self.lon(parseFloat(event.latLng.lng()));
	                    self.lat(parseFloat(event.latLng.lat()));	                    
	                }            
	            }

	            self.setMarker = function(){
	                self.marker = new google.maps.Marker({
	                    position: self.location, 
	                    map: self.map()
	                }); 
	                self.marker.setPosition(self.location);  
	            }

	            if(data.lat){
	                self.legit_data = true;
	            }

	        }        

	        function viewModel() {
	            var self = this;
	            self.restaurant_name = ko.observable("");
	            self.restaurants = ko.observableArray([]);
	            self.current_restaurant = ko.observable();
	            self.current_user = ko.observable();
	            self.with_menu = ko.observable(false);
	            self.is_listed = ko.observable(false);
	            self.pay_us = ko.observable(false);

				self.myPostProcessingLogic = function(elements) {
					$(elements).find("noscript").replaceWith(function(){
					    return this.outerHTML.replace("noscript","script");
					});
				}	            

	            self.instructions = ko.computed({
	            	read: function(){
	            		if(self.pay_us()){
	            			return "four";
	            		}		            		
	            		if(self.current_restaurant().saved()){
	            			return "three";
	            		}	 
	            		if(self.current_user().sign_up_link()){
	            			return "two";
	            		}           		
            			return "welcome";	            		
	            	},
	            	deferEvaluation: true,
	            });

	            self.user_template = ko.computed({
	            	read: function(){
	            		if(self.pay_us()){
	            			return "pay";
	            		}		            		
	            		if(self.current_restaurant().saved()){
	            			return "setup_menu";
	            		}	 
	            		if(self.current_user().sign_up_link()){
	            			return "signed_up";
	            		}           		
            			return "sign_up";
	            	},
	            	deferEvaluation: true,
	            });	

	            self.pay = function(){
	            	self.pay_us(true);
	            }            

	            self.address = ko.observable("");
	            self.spin = ko.observable(false);
	            self.mapObject = ko.observable(new mapObject({}));

	            self.address.extend({ rateLimit: 2000 });

	            self.address.subscribe(function(newvalue){
	                self.spin(true);
	                $.ajax({
	                  url: "https://nominatim.openstreetmap.org/search.php",
	                  data: {
	                    q: self.address,
	                    format: "json",
	                  },
	                  success: function(data, textStatus, jqXHR){
	                        console.log(data);
	                        self.spin(false);
	                        if(data.length > 0){
	                            var first = data[0];
	                            self.mapObject().lat(first.lat);
	                            self.mapObject().lon(first.lon);
	                        }
	                    },
	                    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	                        self.spin(false);
	                        console.log("There was an error saving the section " + errorThrown);
	                    },
	                    dataType: "json"
	                });                    
	            });

	            self.save = function(callback_done){
	                self.current_restaurant().lat = self.mapObject().location.lat();
	                self.current_restaurant().lon = self.mapObject().location.lng();                
	                $.ajax({
	                  type: "POST",
	                  url: "/app/administration/update_restaurant",
	                  data: {
	                    restaurant_id: self.current_restaurant().id,
	                    params:ko.toJSON(self.current_restaurant()),
	                  },
	                  success: function(data, textStatus, jqXHR){
	                        bootbox.dialog({
	                          message: "Your information was saved",
	                          title: "Saved!",
	                          buttons: {
	                            success: {
	                                label: "Ok",
	                                className: "btn-primary pull-right col-xs-3",
	                                callback: function(){

	                                }                              
	                            },                            
	                          },
	                        });      
	                    },
	                    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	                        console.log("There was an error saving the section " + errorThrown);
	                    },
	                    dataType: "json"
	                });                
	            }            

	            self.search_for_restaurant = function() {
	                $.ajax({
	                    type: "POST",
	                    url: "/app/administration/search_restaurants",
	                    data: {
	                        restaurant_name: self.restaurant_name(),
	                        with_menus: self.with_menu(),
	                        is_listed: self.is_listed(),
	                    },
	                    success: function(data){
	                        self.restaurants($.map(data, function(item) { console.log(item); return new Restaurant(item) }));
	                    },
	                    dataType: 'json'
	                });
	            };

	            self.set_restaurant = function(resto) {
	                restaurant_id = resto.id;
	                self.current_user(null);
	                self.current_restaurant(resto);
	                self.mapObject().lat(resto.lat());
	                self.mapObject().lon(resto.lon());                  
	                self.mapObject().location = new google.maps.LatLng(parseFloat(resto.lat()),parseFloat(resto.lon()));
	                self.mapObject().map(null);
	                if(resto.user_id){
	                    self.fetch_user(resto.user_id);
	                }
	                self.fetch_profile_images();
	            };

	            self.createUser = function(){
	                self.current_user(new User({}));
	            }

	            self.set_restaurant_signup = function(){
	                self.mapObject().lat(self.current_restaurant().lat());
	                self.mapObject().lon(self.current_restaurant().lon());                  
	                self.mapObject().location = new google.maps.LatLng(parseFloat(self.current_restaurant().lat()),parseFloat(self.current_restaurant().lon()));
	                self.mapObject().map(null);	            	
	            }

	            if(user){
	            	self.current_user(new User(user));
	            	self.current_restaurant(new Restaurant(restaurant));
	            	if(self.current_restaurant().lat() != ""){
	            		self.set_restaurant_signup();
	            	}
	            } else {
		            self.createUser();
	            }

	            self.current_user().resto_data.subscribe(function(resto){
	            	self.current_restaurant(new Restaurant(resto));
	            });

	            self.mapObject().lat.subscribe(function(){
	            	if(self.current_restaurant()){
	            		self.current_restaurant().lat(self.mapObject().lat());
	            		self.current_restaurant().lon(self.mapObject().lon());
	            	}
	            });

	            self.fetch_user = function(id){
	                $.ajax({
	                    type: "POST",
	                    url: "/app/administration/load_user",
	                    data: {
	                        id: id
	                    },
	                    success: function(data){
	                        self.current_user(new User(data));
	                    },
	                    dataType: 'json'
	                });                
	            }

	            self.fetch_profile_images = function(){
	                $.ajax({
	                    type: "POST",
	                    url: "/app/administration/load_profile_images",
	                    data: {
	                        restaurant_id: restaurant_id
	                    },
	                    success: function(data){
	                        self.current_restaurant().setupProfileImages(data);
	                    },
	                    dataType: 'json'
	                });                
	            }            

	            self.new_restaurant = function(){
	                self.current_restaurant(new Restaurant({
	                                                        name:"New Restaurant",
	                                                        lat:0.0,
	                                                        lon:0.0,
	                                                        _id:null,
	                                                        address_line_2:"",
	                                                        address_line_1:"",
	                                                        phone:"",
	                                                        city:"",
	                                                        province:""
	                                                    }))
	            }        
	        };

	        ko.bindingHandlers.iMap = {
	            init: function (element, valueAccessor) {
	                var value = valueAccessor()();
	                var lat_lon = new google.maps.LatLng(parseFloat(value.lat()),parseFloat(value.lon()));
	                if(!value.map()){
	                    var styles = [
	                       {
	                         featureType: "poi",
	                         stylers: [
	                          { visibility: "off" }
	                         ]   
	                        },
	                       {
	                         featureType: "transit",
	                         stylers: [
	                          { visibility: "off" }
	                         ]   
	                        }                        
	                    ];

	                    var styledMap = new google.maps.StyledMapType(styles,{name: "Styled Map"});                    
	                    var mapOptions = {
	                        zoom: 10,
	                        center: lat_lon,
	                        mapTypeControlOptions: {
	                          mapTypeIds: []
	                        },
	                    };   
	                    value.map(new google.maps.Map(element,mapOptions));
	                    value.map().mapTypes.set('map_style', styledMap);
	                    value.map().setMapTypeId('map_style');                    
	                    google.maps.event.addListener(value.map(), 'click', function(event){ value.clickEvent(event) });     
	                }

	                value.map().setCenter(lat_lon);
	                value.setMarker();
	            }
	        };         

	        function loadScript() {
	            var script = document.createElement('script');
	            script.type = 'text/javascript';
	            script.src = 'https://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize';
	            document.body.appendChild(script);
	        }    

	        window.onload = loadScript;      
	        var viewmodel;

	        function initialize() {
	            viewmodel = new viewModel();
	            ko.applyBindings(viewmodel);
	        }     

	    //]]>  
	    </script>  		
	</body>
</html>