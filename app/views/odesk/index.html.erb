<div class="profile_form_wrapper container">
    <div class="row">
        <div class="col-xs-8">
            <div class="form-inline" role="form">
                <input class="form-control" data-bind="value: restaurant_name" />
                <button class="btn btn-default" data-bind="click: search_for_restaurant">Search</button>
            </div>
        </div>
        <div class="col-xs-4">
            <div><input type="checkbox" value="hideNoMenu" data-bind="checked: hideNoMenu" /> Hide Restaurants Without Menus Attached</div>
            <div><input type="checkbox" value="hideWithMenu" data-bind="checked: hideWithMenu" /> Hide Restaurants With Menus</div>            
            <div><input type="checkbox" value="hideCompleted" data-bind="checked: hideCompleted" /> Show Finished</div>
        </div>                   
    </div>
    <div class="row" style="max-height: 400px; overflow-y: scroll">
        <div class="col-xs-12">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Address</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: filteredRestaurants">
                    <tr data-bind="click: function(){ $root.current_restaurant($data) }">
                        <td>
                            <p data-bind="text: name"></p>
                        </td>   
                        <td>
                            <p data-bind="text: address_line_1"></p>
                        </td>                                                                                              
                    </tr>   
                </tbody>
            </table>
        </div>
    </div>    
</div>

<div class="profile_form_wrapper container" data-bind="with: current_restaurant">   
    <div class="row">
        <div class="col-xs-12">
            <h2 data-bind="text: name"></h2>
        </div>
        <div class="col-xs-12" data-bind="foreach: menu_images">
            <div class="col-xs-3">
                <img data-bind="attr: { src: url }" width="100%">
            </div>
        </div>
        <div class="col-xs-12" data-bind="with: odesk" style="margin-top: 15px">
            <div class="col-xs-3">
                <h4>Odesk Link</h4>
            </div>
            <div class="col-xs-9">
                <input class="form-control" type="text" data-bind="attr:{value: 'https://dishgo.ca/app/odesk/edit_menu/' + access_token()}" style="width: 100%">
            </div>            
        </div>
        <div class="col-xs-12" data-bind="with: odesk" style="margin-top: 15px">
            <div class="col-xs-8">
                <input class="form-control" type="text" data-bind="value: assigned_to">
            </div>
            <button data-bind="click: function(){ assign($parent.id) }" class="btn btn-info col-xs-4">Assign <i class="fa fa-spinner fa-spin" data-bind="visible: spin"></i><i class="fa fa-check" data-bind="visible: saved"></i></button>
        </div>        
        <div class="col-xs-12 text-center" data-bind="with: odesk" style="margin-top: 15px">
            <button class="btn btn-primary" data-bind="click: $parent.regenerateToken">Regenerate Token</button>       
            <button class="btn btn-primary" data-bind="click: function(){ mergeMenu($parent.id) }">Merge Menu</button>      
        </div>                     
    </div>
</div>

    <script type='text/javascript'>//<![CDATA[ 

        function viewModel() {
            var self = this;
            self.restaurant_name = ko.observable("");
            self.hideNoMenu = ko.observable(false);
            self.hideWithMenu = ko.observable(false);
            self.hideCompleted = ko.observable(false);
            self.restaurants = ko.observableArray([]);
            self.current_restaurant = ko.observable();
            self.search_for_restaurant = function() {
                $.getJSON("/app/odesk/search_restaurants?restaurant_name=" + self.restaurant_name() + "&hide_no_menu=" + self.hideNoMenu() + "&hide_with_menu=" + self.hideWithMenu(), function(data) { 
                    self.restaurants($.map(data, function(item) { console.log(item); return new Restaurant(item) }));
                }).fail( function(d, textStatus, error) {
                    console.error("getJSON failed, status: " + textStatus + ", error: "+error)
                });
            };

            self.set_restaurant = function(resto) {
                self.current_restaurant(resto);
            };

            self.completedRestaurants = ko.computed(function(){
                var filtered = _.filter(self.restaurants(),function(e){
                    if(self.hideCompleted()){
                        if(e.odesk() && e.odesk().completed){
                            return true;
                        } else {
                            return false;
                        }
                    } 
                    return true;
                });
                return filtered;
            });            

            self.filteredRestaurants = ko.computed(function(){
                var filtered = _.filter(self.completedRestaurants(),function(e){
                    if(self.hideNoMenu()){
                        if(e.menu_images().length == 0){
                            return false;
                        }
                    }
                    return true;
                });
                return filtered;
            });

            self.new_restaurant = function(){
                self.current_restaurant(new Restaurant({
                                                        name:"New Restaurant",
                                                        lat:0.0,
                                                        lon:0.0,
                                                        _id:null,
                                                        address_line_2:"",
                                                        address_line_1:"",
                                                        phone:"",
                                                        city:"",
                                                        province:""
                                                    }))
            }        
        };

        var viewmodel = new viewModel();
        ko.applyBindings(viewmodel);


    //]]>  
    </script>