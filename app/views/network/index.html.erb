<div id="menu_background">

	<!-- MOBILE -->
	<!-- ko if: isMobile -->
	<div class="container_small letsdishgomeat"  data-bind="mobileSearchTop: top_search()">
		<div class="clear-search" data-bind="visible: top_search(), click: function(){ $root.restaurant_search_term('') }" style="display: none"><i class="fa fa-times"></i></div>
		<div class="row">
			<div class="col-xs-12 text-center">
					<div class="main-controls">
						<ul class="tab-menu">
							<li data-bind="click: function(){ $root.search_type('restaurant') }, css:{active: $root.search_type() == 'restaurant'}, localize">Restaurant</li>
							<li data-bind="click: function(){ $root.search_type('dish') }, css:{active: $root.search_type() == 'dish'}, localize">Dish</li>
						</ul>							
						<div class="input-group input-group-lg">
							<input id="#" style="border-radius:0;" name="#" type="text" placeholder="Restaurant Name" class="form-control" data-bind="localizePlaceholder:searchPlaceholder, value: restaurant_search_term, valueUpdate: 'afterkeydown'" />
							<span class="input-group-btn">
								<button class="btn btn-lg btn-search" style="border-radius:0;" data-bind="disable: searching"><i class="fa fa-spinner fa-spin" data-bind="visible: searching"></i><span data-bind="visible: !searching()"><i class="fa fa-search"></i></span></button>
							</span>
						</div>
					</div>
			</div>
		</div>
	</div>
	<!-- /ko -->

	<!-- DESKTOP -->
	<!-- ko if: !isMobile -->
	<div class="container_small letsdishgomeat"  data-bind="visible: !top_search()" style="display: none">
		<div class="row">
			<div class="col-xs-12 text-center">
				<div class="main-controls">
					<ul class="tab-menu">
						<li data-bind="click: function(){ $root.search_type('restaurant') }, css:{active: $root.search_type() == 'restaurant'}, localize">Restaurant</li>
						<li data-bind="click: function(){ $root.search_type('dish') }, css:{active: $root.search_type() == 'dish'}, localize">Dish</li>
					</ul>							 
					<div class="input-group input-group-lg">
						<div class="input-group-addon searchSelectorContainer" style="border-radius:0;">
							<span class="dropdown-toggle searchDropdownSelector" data-toggle="dropdown"><span class="caret"></span></span>
							<ul class="dropdown-menu" role="menu" style="text-align:left;">
								<li><a href="#" data-bind="click: function(){ $root.search_type('dish') }, localize">Search by Dish</a></li>
								<li><a href="#" data-bind="click: function(){ $root.search_type('restaurant') }, localize">Search by Restaurant Name</a></li>
							</ul>
						</div>							
						<input id="#" name="#" type="text" class="form-control" data-bind="localizePlaceholder:searchPlaceholder, hasFocus: !top_search(), value: restaurant_search_term, valueUpdate: 'afterkeydown'" />
						<span class="input-group-btn">
							<button class="btn btn-lg btn-search" style="border-radius:0;" data-bind="disable: searching"><i class="fa fa-spinner fa-spin" data-bind="visible: searching"></i><span data-bind="visible: !searching()"><i class="fa fa-search"></i></span></button>
						</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- /ko -->

	<!-- SEARCH RESULTS WILL APPEAR HERE -->
	<%= render 'restaurant_search_results' %>
	<%= render 'dish_search_results' %>


<!-- <div class="odometer" data-bind="odometer">

</div> -->

<div id="white_background" data-bind="slideVisible: !top_search()">
	<div class="container">
		<div class="row">
			<h1 class="text-center" style="margin-top:0;" data-bind="localize">Top Dishes of the Day</h1>
			<hr>
			<% @dishes.each do |dish| %>
				<div class="col-xs-12 col-sm-6 col-md-4" style="padding:0;">
					<div class="top_dish_container">
						<a href="/app/network/restaurant/<%= dish.restaurant.id %>" class="full_dish_link"></a>
						<div class="dish-picture imageCroppedFull" style="background-image: url(<%= dish.img_src %>); border-radius: 0;">							
							<span class="dish_rating">
								<%= raw(stars dish.rating) %>
							</span>
							<div class="dish-description">
								<span><%= first_non_empty(dish.name_translations) %></span>
								<p><%= first_non_empty_truncated(dish.description_translations) %></p>
							</div>
						</div>
					</div>
				</div>
			<% end %>
		</div>
	</div>
</div>	

<script>
	[
		"<%= stylesheet_path 'network'%>",
	].forEach(function(src) {
		var l = document.createElement('link'); 
		l.rel = 'stylesheet';
		l.href = src;
		document.head.appendChild(l);
	});

	var scripts = [
		"<%= javascript_path 'application' %>",
    	"<%= javascript_path 'menu_editor' %>",
    	"<%= javascript_path 'network_index_javascript' %>",
    	"<%= javascript_path 'network_odometer' %>",
	];
	var src;
	var script;
	var pendingScripts = [];
	var firstScript = document.scripts[0];

	// Watch scripts load in IE
	function stateChange() {
	  // Execute as many scripts in order as we can
	  var pendingScript;
	  while (pendingScripts[0] && pendingScripts[0].readyState == 'loaded') {
	    pendingScript = pendingScripts.shift();
	    // avoid future loading events from this script (eg, if src changes)
	    pendingScript.onreadystatechange = null;
	    // can't just appendChild, old IE bug if element isn't closed
	    firstScript.parentNode.insertBefore(pendingScript, firstScript);
	  }
	}

	// loop through our script urls
	while (src = scripts.shift()) {
	  if ('async' in firstScript) { // modern browsers
	    script = document.createElement('script');
	    script.async = false;
	    script.src = src;
	    document.head.appendChild(script);
	  }
	  else if (firstScript.readyState) { // IE<10
	    // create a script and add it to our todo pile
	    script = document.createElement('script');
	    pendingScripts.push(script);
	    // listen for state changes
	    script.onreadystatechange = stateChange;
	    // must set src AFTER adding onreadystatechange listener
	    // else weâ€™ll miss the loaded event for cached scripts
	    script.src = src;
	  }
	  else { // fall back to defer
	    document.write('<script src="' + src + '" defer></'+'script>');
	  }
	}			

</script>	

